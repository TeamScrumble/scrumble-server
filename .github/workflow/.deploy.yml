name: Deploy to Lightsail Container

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deploy server'
        required: true
        type: choice
        options:
        - server
        

jobs:
  deploy-backend:
    if: github.event.inputs.deploy_target == 'server'
    runs-on: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        cache-read-only: false
        cache-overwrite-existing: true
        gradle-home-cache-cleanup: true
    
    - name: Grant execute permission for gradlew
      run: |
        chmod +x gradlew
    
    - name: Build with Gradle
      run: |
        ./gradlew bootJar --parallel --build-cache
    
    - name: Build Docker image
      run: |
        docker build \
          --cache-from scrumble-server:latest \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -t scrumble-server:latest .
    
    - name: Push to Lightsail
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2
        BACKEND_SERVICE_NAME: ${{ secrets.BACKEND_SERVICE_NAME }}
      run: |
        aws lightsail push-container-image \
          --service-name $BACKEND_SERVICE_NAME \
          --label spring \
          --image scrumble-server:latest
        
        # Get the latest image URL
        SPRING_IMAGE=$(aws lightsail get-container-images --service-name $BACKEND_SERVICE_NAME --query 'containerImages[?contains(image,`spring`)]|[0].image' --output text)
    
    - name: Deploy backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2
        BACKEND_SERVICE_NAME: ${{ secrets.BACKEND_SERVICE_NAME }}
      run: |
        # Get the latest image URL
        SPRING_IMAGE=$(aws lightsail get-container-images --service-name $BACKEND_SERVICE_NAME --query 'containerImages[?contains(image,`spring`)]|[0].image' --output text)
        
        aws lightsail create-container-service-deployment \
          --service-name $BACKEND_SERVICE_NAME \
          --containers "{
            \"spring\": {
              \"image\": \"${SPRING_IMAGE}\",
              \"ports\": {\"8080\": \"HTTP\"},
              \"environment\": {
                \"SPRING_PROFILES_ACTIVE\": \"prod\",
                \"DB_URL\": \"${{ secrets.DB_URL }}\",
                \"DB_USERNAME\": \"${{ secrets.DB_USERNAME }}\",
                \"DB_PASSWORD\": \"${{ secrets.DB_PASSWORD }}\",
                \"REDIS_HOST\": \"${{ secrets.REDIS_HOST }}\",
                \"REDIS_PASSWORD\": \"${{ secrets.REDIS_PASSWORD }}\"
              }
            }
          }"

