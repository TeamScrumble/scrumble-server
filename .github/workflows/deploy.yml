name: Java 애플리케이션 빌드 및 빌드 서버 도커 배포

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deploy server'
        required: true
        type: choice
        options:
        - manual-deploy
        - total-deploy

jobs:
  build-and-deploy:
    runs-on: build
    if: ${{ inputs.deploy_target == 'manual-deploy' || inputs.deploy_target == 'total-deploy' }}
    steps:
    - name: 소스 코드 체크아웃
      uses: actions/checkout@v3

    - name: JDK 23 설정
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: gradle

    - name: Gradle 캐시 설정
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Gradle 실행 권한 부여
      run: chmod +x gradlew

    - name: Gradle로 빌드
      run: ./gradlew bootJar --parallel --build-cache

    - name: Docker 이미지 빌드
      run: docker build -t spring-app:latest .

    - name: 기존 컨테이너 중지 및 삭제 (있을 경우)
      run: |
        docker stop spring-app || true
        docker rm spring-app || true

    - name: 새 컨테이너 실행
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
      run: |
        docker run -d \
          --name spring-app \
          --network scrumble \
          -p 9909:8080 \
          -e SPRING_PROFILES_ACTIVE=production \
          -e DB_PASSWORD="$DB_PASSWORD" \
          -e DB_URL="$DB_URL" \
          -e DB_USERNAME="$DB_USERNAME" \
          -e REDIS_HOST="$REDIS_HOST" \
          -e REDIS_PORT="$REDIS_PORT" \
          spring-app:latest
