name: Java 애플리케이션 빌드 및 AWS Lightsail 배포

on:
  workflow_dispatch:
    inputs:
        deploy_target:
          description: 'Deploy server'
          required: true
          type: choice
          options:
          - server
  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 소스 코드 체크아웃
      uses: actions/checkout@v3
    
    - name: JDK 23 설정
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: gradle
    
    - name: Gradle 캐시 설정
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Gradle 실행 권한 부여
      run: chmod +x gradlew
    
    - name: Gradle로 빌드
      run: ./gradlew bootJar --parallel --build-cache
    
    - name: Docker 이미지 빌드
      run: |
        docker build -t spring-app:latest .

    - name: AWS Lightsail 컨테이너에 배포
      uses: fdiesel/github-action-deploy-aws-lightsail-container@v2.0.1
      with:
        image-name: spring-app
        image: spring-app:latest
        aws-region: ap-northeast-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        service-name: ${{ secrets.BACKEND_SERVICE_NAME }}
        aws-lightsail-service-config: >-
          {
            "containers": {
              "spring": {
                "ports": {
                  "8080": "HTTP"
                }
              }
            },
            "publicEndpoint": {
              "containerName": "spring",
              "containerPort": 8080,
              "healthCheck": {
                "path": "/actuator/health",
                "intervalSeconds": 10,
                "timeoutSeconds": 5,
                "unhealthyThreshold": 2,
                "healthyThreshold": 2
              }
            }
          }
